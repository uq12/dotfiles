#!/data/data/com.termux/files/usr/bin/env bash

#!/data/data/com.termux/files/usr/bin/env bash

#!/data/data/alsultan.shell/rootfs/usr/bin/sh

# Sample Android System Information Script
# Written For AL-SULTAN Shell
# By Mohammad Gamal Al-Quaiti <alsultan.it@outlook.com>
# 10.04.2021 07:41:13 AM

# Colors.
if [ -n "$(command -v tput)" ] && [ $(tput colors) -ge 8 ]; then
	RST="$(tput sgr0)"
	RED="${RST}$(tput setaf 1)"
	BRED="${RST}$(tput bold)$(tput setaf 1)"
	GREEN="${RST}$(tput setaf 2)"
	YELLOW="${RST}$(tput setaf 3)"
	BYELLOW="${RST}$(tput bold)$(tput setaf 3)"
	BLUE="${RST}$(tput setaf 4)"
	CYAN="${RST}$(tput setaf 6)"
	BCYAN="${RST}$(tput bold)$(tput setaf 6)"
	ICYAN="${RST}$(tput sitm)$(tput setaf 6)"
else
	RED=""
	BRED=""
	GREEN=""
	YELLOW=""
	BYELLOW=""
	BLUE=""
	CYAN=""
	BCYAN=""
	ICYAN=""
	RST=""
fi

I=' │ '

printf "${RST}\n"

ProgressBar()
{
  local Progress=`printf %.0f $1`
  local Factor=${2:-"1"}
  local Maximum=100

  local FactoredProgress=$((Progress / Factor))
  local FactoredMaximum=$((Maximum / Factor))
  
  local FactoredMaximumLeft=$((FactoredMaximum - FactoredProgress))

  local S="▒"
  local i
   
  for i in `seq 1 $FactoredProgress`;do
	printf "${BYELLOW}%s" "${S}"
  done
  
  for i in `seq 1 $FactoredMaximumLeft`; do
	printf "${RST}%s" "${S}"
  done
  
  printf "${RST}"
}

Disk()
{
	local D=`df 2> /dev/null | grep /storage/emulated | tr -s ' ' | cut -d' ' -f$1`
	if [ -z $D ]; then D=0; fi
	KiloBytesToHuman $D
}

DiskPercent() 
{
	local Total=`df 2> /dev/null | grep /storage/emulated | tr -s ' ' | cut -d' ' -f2`
	local Used=`df 2> /dev/null | grep /storage/emulated | tr -s ' ' | cut -d' ' -f3`
	if [ -z $Total ]; then Total=1; Used=0; fi
	local Usage=$(echo "$Used * 100 / $Total" | bc -l)
    Usage=`printf "%.0f" $Usage`
    printf "%-5s" `printf "%s%%" $Usage`
	ProgressBar $Usage 10
    printf "               "
}

KiloBytesToHuman() 
{
    local SIZE=$1
    local UNITS="KB MB GB TB PB"
    for F in $UNITS; do
		local UNIT=$F
		test ${SIZE%.*} -lt 1024 && break; 
		SIZE=$(echo "$SIZE / 1024" | bc -l)
    done

    if [ "$UNIT" = "KB" ]; then
        printf "%4.0f    %s\n" $SIZE $UNIT
    else
        printf "%7.02f %s\n" $SIZE $UNIT
    fi
}

MegaBytesToHuman() 
{
    local SIZE=$1
    local UNITS="MB GB TB PB"
    for F in $UNITS; do
		local UNIT=$F
		test ${SIZE%.*} -lt 1024 && break; 
		SIZE=$(echo "$SIZE / 1024" | bc -l)
    done

    if [ "$UNIT" = "MB" ]; then
        printf "%4.0f    %s\n" $SIZE $UNIT
    else
        printf "%7.02f %s\n" $SIZE $UNIT
    fi
}

Usage() 
{
	local W=`free -m | grep Mem | tr -s ' ' | cut -d' ' -f$1`
	MegaBytesToHuman $W
}

UsageFree() 
{
	local Total=`free -m | grep Mem | tr -s ' ' | cut -d' ' -f2`
	local Used=`free -m | grep Mem | tr -s ' ' | cut -d' ' -f3`
	local Free=$(($Total - $Used))
	MegaBytesToHuman $Free
}

UsagePercent() 
{
	local Total=`free -m | grep Mem | tr -s ' ' | cut -d' ' -f2`
	local Used=`free -m | grep Mem | tr -s ' ' | cut -d' ' -f3`
	local Usage=$(echo "$Used * 100 / $Total" | bc -l)
    Usage=`printf "%.0f" $Usage`
    printf "%-5s" `printf "%s%%" $Usage`
	ProgressBar $Usage 10
    printf "               "
}

ToUpper()
{
	printf '%s\n' "$1" | awk '{ print toupper($0) }'
}

Username()
{
	if [ "$(id -u)" = "0" ]; then 
		echo 'root'
	else
		echo `whoami | xargs`
	fi
}

GetProp()
{
	getprop $1 2>/dev/null || echo "?"
}

AlsultanSysSize()
{
	du -sh /data/data/com.termux/files/usr 2>/dev/null | cut -d'/' -f1 | xargs 2>/dev/null || echo "0"
	
}


printf "${CYAN}            ┌───────────────────────┐\n"
printf "${CYAN}┌───────────┤  ${BRED}SYSTEM INFORMATION${RST}${CYAN}   ├──────────┐\n"
printf "${CYAN}│           └───────────────────────┘          │\n"
printf "${CYAN}│                                              │\n"



printf "${CYAN}│ ${GREEN}%-15s${RST}" "Hostname:"
printf "${BYELLOW}%-30s${CYAN}│\n" "`ToUpper $(hostname | xargs)`"


printf "${CYAN}│ ${GREEN}%-15s${RST}" "Username:"
printf "${BYELLOW}%-30s${CYAN}│\n" "`Username`"

printf "${CYAN}│%-15s " ; printf "${BYELLOW}%-30s${CYAN}│\n" " "


printf "${CYAN}│ ${GREEN}%-15s${RST}" "System:"
printf "${BYELLOW}%-30s${CYAN}│\n" "`uname` (`uname -o` `GetProp ro.build.version.release` API `GetProp ro.build.version.sdk`)"


printf "${CYAN}│ ${GREEN}%-15s${RST}" "Kernel:"
printf "${BYELLOW}%-30s${CYAN}│\n" "`uname -r | xargs`"

# printf "${CYAN}│ ${GREEN}%-15s${RST}" "BaseBand:"
# printf "${BYELLOW}%-30s${CYAN}│\n" "`GetProp gsm.version.baseband | xargs`"

printf "${CYAN}│ ${GREEN}%-15s${RST}" "Build Date:"
printf "${BYELLOW}%-30s${CYAN}│\n" "`GetProp ro.build.date | xargs`"


printf "${CYAN}│ ${GREEN}%-15s${RST}" "Packages:"
printf "${BYELLOW}%-30s${CYAN}│\n" "`dpkg -l | grep -c '^ii' | xargs` Package(s) Installed"

printf "${CYAN}│ ${GREEN}%-15s${RST}" "System Size:"
printf "${BYELLOW}%-30s${CYAN}│\n" "`AlsultanSysSize`"


printf "${CYAN}│ ${GREEN}%-15s${RST}" "Uptime:"
printf "${BYELLOW}%-30s${CYAN}│\n" "`uptime | cut -d',' -f1 | xargs`"

printf "${CYAN}│ ${GREEN}%-15s${RST}" "TimeZone:"
printf "${BYELLOW}%-30s${CYAN}│\n" "`GetProp persist.sys.timezone | xargs`"

printf "${CYAN}│%-15s " ; printf "${BYELLOW}%-30s${CYAN}│\n" " "


printf "${CYAN}│ ${GREEN}%-15s${RST}" "Manufacturer:"
printf "${BYELLOW}%-30s${CYAN}│\n" "`ToUpper $(GetProp ro.product.manufacturer | xargs)`"

printf "${CYAN}│ ${GREEN}%-15s${RST}" "Model:"
printf "${BYELLOW}%-30s${CYAN}│\n" "`GetProp ro.product.model | xargs`"

printf "${CYAN}│ ${GREEN}%-15s${RST}" "Hardware:"
printf "${BYELLOW}%-30s${CYAN}│\n" "`ToUpper $(GetProp ro.boot.hardware | xargs)`"

printf "${CYAN}│ ${GREEN}%-15s${RST}" "Architecture:"
printf "${BYELLOW}%-30s${CYAN}│\n" "`uname -m | xargs` (`cat /proc/cpuinfo | grep processor | wc -l` Cores)"

printf "${CYAN}│ ${GREEN}%-15s${RST}" "ABIs:"
printf "${BYELLOW}%-30s${CYAN}│\n" "`GetProp ro.product.cpu.abilist | xargs`"

printf "${CYAN}│%-15s " ; printf "${BYELLOW}%-30s${CYAN}│\n" " "


printf "${CYAN}│ ${GREEN}%-15s${RST}" "Memory Total:"
printf "${BYELLOW}%-30s${CYAN}│\n" "`Usage 2 | xargs`"

printf "${CYAN}│ ${GREEN}%-15s${RST}" "Memory Used:"
printf "${BYELLOW}%-30s${CYAN}│\n" "`Usage 3 | xargs`"

printf "${CYAN}│ ${GREEN}%-15s${RST}" "Memory Free:"
printf "${BYELLOW}%-30s${CYAN}│\n" "`UsageFree | xargs`"

printf "${CYAN}│ ${GREEN}%-15s${RST}" "Memory Usage:"
printf "${BYELLOW}%-30s${CYAN}│\n" "`UsagePercent`"


printf "${CYAN}│%-15s " ; printf "${BYELLOW}%-30s${CYAN}│\n" " "

printf "${CYAN}│ ${GREEN}%-15s${RST}" "Disk Total:"
printf "${BYELLOW}%-30s${CYAN}│\n" "`Disk 2 | xargs`"


printf "${CYAN}│ ${GREEN}%-15s${RST}" "Disk Used:"
printf "${BYELLOW}%-30s${CYAN}│\n" "`Disk 3 | xargs`"

printf "${CYAN}│ ${GREEN}%-15s${RST}" "Disk Free:"
printf "${BYELLOW}%-30s${CYAN}│\n" "`Disk 4 | xargs`"

printf "${CYAN}│ ${GREEN}%-15s${RST}" "Disk Usage:"
printf "${BYELLOW}%-30s${CYAN}│\n" "`DiskPercent`"



printf "${CYAN}│%-15s " ; printf "${BYELLOW}%-30s${CYAN}│\n" " "


printf "${CYAN}│ ${GREEN}%-15s${RST}" "IP Address:"
printf "${BYELLOW}%-30s${CYAN}│\n" "`ip -4 address show | grep inet | grep global | head -n 1 | tr -s ' ' | cut -d' ' -f3`"


printf "${CYAN}│%-15s " ; printf "${BYELLOW}%-30s${CYAN}│\n" " "
# printf  "│              ${BRED}Created By EASY.QUEST${RST}${CYAN}           │\n"
# printf  "│            ${BRED}Mohammad Gamal Al-Quaiti${RST}${CYAN}          │\n"
printf  "│               ${BRED}EASY.QUEST@YA.RU${RST}${CYAN}               │\n"
printf  "│               ${BRED}+7 938 867 0228${RST}${CYAN}                │\n"
printf  "└──────────────────────────────────────────────┘${RST}\n"

echo;echo


